<template name="myslideminmax" value="template&lt;class T&gt;&#10;pair &lt;vector&lt;T&gt;, vector&lt;T&gt;&gt; slide_minmax(const vector&lt;T&gt; &amp;v, int k) {&#10;&#10;    deque&lt;int&gt; deq_min, deq_max;&#10;    vector&lt;T&gt; ret_min, ret_max;&#10;    for (int i = 0; i &lt; v.size(); i++) {&#10;&#10;        while (!deq_min.empty() &amp;&amp; v[deq_min.back()] &gt;= v[i]) deq_min.pop_back();&#10;        while (!deq_max.empty() &amp;&amp; v[deq_max.back()] &lt;= v[i]) deq_max.pop_back();&#10;&#10;        deq_min.push_back(i);&#10;        deq_max.push_back(i);&#10;&#10;        if (i - k + 1 &gt;= 0) {&#10;            ret_min.emplace_back(v[deq_min.front()]);&#10;            ret_max.emplace_back(v[deq_max.front()]);&#10;            if (deq_min.front() == i - k + 1) deq_min.pop_front();&#10;            if (deq_max.front() == i - k + 1) deq_max.pop_front();&#10;        }&#10;&#10;    }&#10;    return {ret_min, ret_max};&#10;}&#10;" description="" toReformat="true" toShortenFQNames="true">
    <context>
        <option name="OC_DECLARATION_C" value="true"/>
        <option name="OC_DECLARATION_CPP" value="true"/>
        <option name="OC_STATEMENT_C" value="true"/>
        <option name="OC_STATEMENT_CPP" value="true"/>
    </context>
</template>