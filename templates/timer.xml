<template name="mytimer" value="template&lt;class T = chrono::microseconds&gt;&#10;class Timer {&#10;public:&#10;    Timer() { reset(); }&#10;&#10;    void reset() {&#10;        start = chrono::high_resolution_clock::now();&#10;    }&#10;&#10;    [[nodiscard]] T::rep elapsed() const {&#10;        auto end = chrono::high_resolution_clock::now();&#10;        return chrono::duration_cast&lt;T&gt;(end - start).count();&#10;    }&#10;&#10;private:&#10;    chrono::high_resolution_clock::time_point start;&#10;};&#10;" description="" toReformat="false" toShortenFQNames="true">
    <context>
        <option name="OC_DECLARATION_C" value="true"/>
        <option name="OC_DECLARATION_CPP" value="true"/>
        <option name="OC_STATEMENT_C" value="true"/>
        <option name="OC_STATEMENT_CPP" value="true"/>
    </context>
</template>