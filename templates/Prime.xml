<template name="myprime" value="class Prime {&#10;private:&#10;    vector&lt;int&gt; min_pf; // min_pf[i] = minimum prime factor of i&#10;    vector&lt;int&gt; prime;&#10;&#10;    // linear sieve https://cp-algorithms.com/algebra/prime-sieve-linear.html&#10;    void sieve(int N) {&#10;        min_pf[0] = min_pf[1] = -1;&#10;        for (int i = 2; i &lt; N; i++) {&#10;            if (min_pf[i] == 0) {&#10;                prime.emplace_back(i);&#10;                min_pf[i] = i;&#10;            }&#10;            for (int j : prime) {&#10;                if (j &gt; min_pf[i] || i * j &gt;= N) break;&#10;                min_pf[i * j] = j;&#10;            }&#10;        }&#10;    }&#10;&#10;public:&#10;    explicit Prime(int N = 1100000) : min_pf(N + 1) { sieve(N + 1); }&#10;&#10;    [[nodiscard]] vector&lt;pair&lt;lint, int&gt;&gt; factorize(lint n) {&#10;        vector&lt;pair&lt;lint, int&gt;&gt; res;&#10;        lint sz = (lint)min_pf.size();&#10;&#10;        if (n &gt;= sz) {&#10;            for (lint i = 2; i * i &lt;= n; i++) {&#10;                int cnt = 0;&#10;                while (n % i == 0) {&#10;                    cnt++;&#10;                    n /= i;&#10;                }&#10;                if (cnt) res.emplace_back(i, cnt);&#10;            }&#10;            res.emplace_back(n, 1);&#10;        }&#10;        else {&#10;            int prev = min_pf[n], cnt = -1;&#10;            while (n &gt; 0) {&#10;                int now = min_pf[n];&#10;                n /= now;&#10;                cnt++;&#10;                if (prev != now) {&#10;                    res.emplace_back(prev, cnt);&#10;                    prev = now;&#10;                    cnt = 0;&#10;                }&#10;            }&#10;        }&#10;&#10;        return res;&#10;    }&#10;&#10;    // verified using boost miller_rabin_test https://wandbox.org/permlink/6YepW3J9SQNFwWxu&#10;    [[nodiscard]] bool isPrime(lint n) {&#10;        if (n &lt; (int)(min_pf.size())) return min_pf[n] == n;&#10;        else if (n == 2 || n == 3) return true;&#10;        else if (n % 2 == 0 || n % 3 == 0) return false;&#10;        else if (n % 6 != 1 &amp;&amp; n % 6 != 5) return false;&#10;        for (lint i = 5; i * i &lt;= n; i += 6) {&#10;            if (n % i == 0) return false;&#10;            if (n % (i + 2) == 0) return false;&#10;        }&#10;        return true;&#10;    }&#10;};&#10;" description="" toReformat="false" toShortenFQNames="true">
    <context>
        <option name="OC_DECLARATION_C" value="true"/>
        <option name="OC_DECLARATION_CPP" value="true"/>
        <option name="OC_STATEMENT_C" value="true"/>
        <option name="OC_STATEMENT_CPP" value="true"/>
    </context>
</template>