<template name="mycompress" value="template&lt;class T&gt;&#10;class Compress {&#10;private:&#10;    vector&lt;T&gt; comp{};&#10;&#10;public:&#10;    Compress() = default;&#10;    explicit Compress(const vector&lt;T&gt; &amp;vec) : comp(vec) { build(); }&#10;&#10;    void add(const T &amp;x) { comp.emplace_back(x); }&#10;&#10;    void build() {&#10;        sort(begin(comp), end(comp));&#10;        comp.erase(unique(begin(comp), end(comp)), end(comp));&#10;    }&#10;&#10;    [[nodiscard]] vector&lt;int&gt; get(const vector&lt;T&gt; &amp;vec) const {&#10;        vector&lt;int&gt; ret(vec.size());&#10;        transform(vec.begin(), vec.end(), ret.begin(), [&amp;](const T &amp;x) { return get(x); });&#10;        return ret;&#10;    }&#10;    [[nodiscard]] int get(const T &amp;x) const { return lower_bound(comp.begin(), comp.end(), x) - begin(comp); }&#10;&#10;    const T &amp;operator[](const int k) const { return comp[k]; }&#10;};&#10;" description="" toReformat="false" toShortenFQNames="true">
    <context>
        <option name="OC_DECLARATION_C" value="true"/>
        <option name="OC_DECLARATION_CPP" value="true"/>
        <option name="OC_STATEMENT_C" value="true"/>
        <option name="OC_STATEMENT_CPP" value="true"/>
    </context>
</template>